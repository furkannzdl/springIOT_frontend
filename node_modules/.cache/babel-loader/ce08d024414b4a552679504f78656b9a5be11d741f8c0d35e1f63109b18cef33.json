{"ast":null,"code":"var _jsxFileName = \"/Users/furkanozdal/Downloads/react/springIOT_frontend/src/InfluxDataFetcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst InfluxDataFetcher = () => {\n  _s();\n  const [deviceData, setDeviceData] = useState([]);\n  const [usr1FlowRates, setUsr1FlowRates] = useState([]);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    if (user) {\n      fetchData();\n    }\n  }, [user]);\n  async function fetchData() {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/data\", {\n        params: {\n          measurement: \"mqtt_data\",\n          timeValue: 3,\n          timeUnit: \"mo\"\n        },\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const devices = response.data;\n      setDeviceData(devices);\n      const flowRates = devices.map(device => {\n        var _device$decodedPayloa;\n        return ((_device$decodedPayloa = device.decodedPayload) === null || _device$decodedPayloa === void 0 ? void 0 : _device$decodedPayloa.usr1_flowRate) || 0;\n      });\n      setUsr1FlowRates(flowRates);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n  const chartData = {\n    labels: usr1FlowRates.map((_, index) => `Data ${index + 1}`),\n    datasets: [{\n      label: \"usr1_flowRate\",\n      data: usr1FlowRates,\n      borderColor: \"red\",\n      backgroundColor: \"rgba(255, 0, 0, 0.2)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(InfluxDataFetcher, \"37JcPR7SpscaheDKCOhV7Al5xxY=\");\n_c = InfluxDataFetcher;\nexport default InfluxDataFetcher;\nvar _c;\n$RefreshReg$(_c, \"InfluxDataFetcher\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","InfluxDataFetcher","_s","deviceData","setDeviceData","usr1FlowRates","setUsr1FlowRates","user","JSON","parse","localStorage","getItem","fetchData","response","get","params","measurement","timeValue","timeUnit","headers","Authorization","token","devices","data","flowRates","map","device","_device$decodedPayloa","decodedPayload","usr1_flowRate","error","console","chartData","labels","_","index","datasets","label","borderColor","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","maintainAspectRatio","_c","$RefreshReg$"],"sources":["/Users/furkanozdal/Downloads/react/springIOT_frontend/src/InfluxDataFetcher.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst InfluxDataFetcher = () => {\n  const [deviceData, setDeviceData] = useState([]);\n  const [usr1FlowRates, setUsr1FlowRates] = useState([]);\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    if (user) {\n      fetchData();\n    }\n  }, [user]);\n\n  async function fetchData() {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/data\", {\n        params: { measurement: \"mqtt_data\", timeValue: 3, timeUnit: \"mo\" },\n        headers: { Authorization: `Bearer ${user.token}` },\n      });\n\n      const devices = response.data;\n      setDeviceData(devices);\n      const flowRates = devices.map(device => device.decodedPayload?.usr1_flowRate || 0);\n      setUsr1FlowRates(flowRates);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n\n  const chartData = {\n    labels: usr1FlowRates.map((_, index) => `Data ${index + 1}`),\n    datasets: [{ label: \"usr1_flowRate\", data: usr1FlowRates, borderColor: \"red\", backgroundColor: \"rgba(255, 0, 0, 0.2)\" }],\n  };\n\n  return (\n    <div>\n      <h2>Data Visualization</h2>\n      <Line data={chartData} options={{ responsive: true, maintainAspectRatio: false }} />\n    </div>\n  );\n};\n\nexport default InfluxDataFetcher;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}