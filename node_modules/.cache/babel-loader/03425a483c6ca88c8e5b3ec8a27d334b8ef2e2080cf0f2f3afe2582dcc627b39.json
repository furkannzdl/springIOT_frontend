{"ast":null,"code":"var _jsxFileName = \"/Users/furkanozdal/Downloads/react/springIOT_frontend/src/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = ({\n  onRegisterSuccess\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Passwords do not match!\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/auth/register\", null, {\n        params: {\n          username,\n          password\n        }\n      });\n      console.log(\"Registration Response:\", response.data);\n      setSuccessMessage(\"Registration successful! You can now log in.\");\n      setErrorMessage(\"\");\n      setTimeout(() => onRegisterSuccess(), 2000); // Redirect to login after success\n    } catch (error) {\n      setErrorMessage(\"Registration failed. User may already exist.\");\n      console.error(\"Registration error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"400px\",\n      margin: \"auto\",\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: \"100%\",\n          padding: \"10px\",\n          background: \"green\",\n          color: \"white\"\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"Fpn5cAAcWpQgOZdPHOH47LptfXw=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RegisterPage","onRegisterSuccess","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleRegister","e","preventDefault","response","post","params","console","log","data","setTimeout","error","style","maxWidth","margin","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","marginBottom","type","placeholder","value","onChange","target","required","width","background","_c","$RefreshReg$"],"sources":["/Users/furkanozdal/Downloads/react/springIOT_frontend/src/RegisterPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst RegisterPage = ({ onRegisterSuccess }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Passwords do not match!\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/auth/register\", null, {\n        params: { username, password },\n      });\n\n      console.log(\"Registration Response:\", response.data);\n      setSuccessMessage(\"Registration successful! You can now log in.\");\n      setErrorMessage(\"\");\n      setTimeout(() => onRegisterSuccess(), 2000); // Redirect to login after success\n    } catch (error) {\n      setErrorMessage(\"Registration failed. User may already exist.\");\n      console.error(\"Registration error:\", error);\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: \"400px\", margin: \"auto\", padding: \"20px\", textAlign: \"center\" }}>\n      <h2>Register</h2>\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\n      {successMessage && <p style={{ color: \"green\" }}>{successMessage}</p>}\n      <form onSubmit={handleRegister}>\n        <div style={{ marginBottom: \"10px\" }}>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n            style={{ width: \"100%\", padding: \"8px\" }}\n          />\n        </div>\n        <div style={{ marginBottom: \"10px\" }}>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            style={{ width: \"100%\", padding: \"8px\" }}\n          />\n        </div>\n        <div style={{ marginBottom: \"10px\" }}>\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n            style={{ width: \"100%\", padding: \"8px\" }}\n          />\n        </div>\n        <button type=\"submit\" style={{ width: \"100%\", padding: \"10px\", background: \"green\", color: \"white\" }}>\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}